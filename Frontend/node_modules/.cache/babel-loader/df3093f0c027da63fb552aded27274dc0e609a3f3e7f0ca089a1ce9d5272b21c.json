{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\interview_portal\\\\src\\\\Components\\\\Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Schedule() {\n  _s();\n  const [dat, datset] = useState([{\n    'name': '',\n    'email': ''\n  }]);\n  console.log(\"hbee\");\n  useEffect(() => {\n    async function fetchapi() {\n      try {\n        const data = await axios.get(\"/user\");\n        console.log(data.data);\n        // arrset(data.data.data);\n        datset(data.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchapi();\n  }, []);\n  console.log(dat);\n  const [user, setUser] = useState({\n    email: \"\",\n    starttime: \"\",\n    endtime: \"\",\n    date: ''\n  });\n  let name, value;\n  const handleInput = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: \"auto\"\n      },\n      children: \"Schedule An Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"Choose Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          value: user.date,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"Start time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"starttime\",\n          id: \"starttime\",\n          value: user.starttime,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"End time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"endtime\",\n          id: \"endtime\",\n          value: user.endtime,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"Select Canditates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"email\",\n          id: \"email\",\n          value: user.email,\n          onChange: handleInput,\n          placeholder: \"Select\",\n          required: true,\n          children: dat && dat.map(ele => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: ele.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Schedule Interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Schedule, \"3V9YSPm62Q/vIjzkYWGyFtv62qE=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useEffect","useState","axios","Schedule","dat","datset","console","log","fetchapi","data","get","err","user","setUser","email","starttime","endtime","date","name","value","handleInput","e","target","margin","fontSize","map","ele"],"sources":["C:/Users/Rajat/Desktop/interview_portal/src/Components/Schedule.js"],"sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Schedule()\r\n{\r\n    const [dat,datset]=useState([{'name':'','email':''}]);\r\n    console.log(\"hbee\");\r\n    useEffect(() => {\r\n        async function fetchapi()\r\n        {\r\n            try {\r\n                const data = await axios.get(\"/user\");\r\n                console.log(data.data)\r\n                // arrset(data.data.data);\r\n                datset(data.data.data);\r\n                } \r\n            catch (err) {\r\n            console.log(err);\r\n            }\r\n        }\r\n        fetchapi();\r\n    }, [])\r\n    console.log(dat);\r\n    const [user,setUser]=useState({\r\n        email:\"\",starttime:\"\",endtime:\"\",date:''\r\n    });\r\n\r\n    let name,value;\r\n    const handleInput=(e)=>\r\n    {\r\n        name=e.target.name;\r\n        value=e.target.value;\r\n        setUser({...user,[name]:value})\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h4 style={{margin:\"auto\"}}>Schedule An Interview</h4>\r\n            <br></br>\r\n            <div style={{margin:\"auto\"}}>\r\n            <form method='POST'>\r\n                <label style={{fontSize:\"30px\"}}>Choose Date:</label>\r\n                <input type=\"date\" name=\"date\" id=\"date\" value={user.date} onChange={handleInput}></input>\r\n                <label style={{fontSize:\"30px\"}}>Start time:</label>\r\n                <input type=\"time\" name=\"starttime\" id=\"starttime\" value={user.starttime} onChange={handleInput}></input>\r\n                <label style={{fontSize:\"30px\"}}>End time:</label>\r\n                <input type=\"time\" name=\"endtime\" id=\"endtime\" value={user.endtime} onChange={handleInput}></input>\r\n                <label style={{fontSize:\"30px\"}}>Select Canditates</label>\r\n                <select name=\"email\" id=\"email\" value={user.email} onChange={handleInput} placeholder='Select' required>\r\n                    {dat && dat.map((ele)=>\r\n                    <option>{ele.email}</option>\r\n                    )}\r\n                </select>\r\n                <button>Schedule Interview</button>\r\n            </form>\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Schedule\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}